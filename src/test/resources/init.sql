create table account (
    id int8 generated by default as identity,
    email varchar(255),
    enabled boolean not null,
    first_name varchar(255),
    last_name varchar(255),
    password varchar(255),
    status varchar(255),
    employee_id int8,
    primary key (id)
);

create table account_roles (
    user_id int8 not null,
    role_id int8 not null
);

create table employee (
    id int8 generated by default as identity,
    code varchar(255),
    primary key (id)
);

create table insurance (
    id int8 generated by default as identity,
    valid_from date not null,
    valid_to date not null,
    employee_id int8 not null,
    primary key (id)
);

create table job (
    id int8 generated by default as identity,
    date timestamp not null,
    quantity numeric(19, 2) not null,
    rate numeric(19, 2) not null,
    total_amount numeric(19, 2) not null,
    account_id int8 not null,
    employee_id int8 not null,
    job_type_id int8 not null,
    location_id int8 not null,
    primary key (id)
);

create table job_type (
    id int8 generated by default as identity,
    default_rate numeric(19, 2),
    disabled boolean not null,
    title varchar(255),
    unit varchar(255) not null,
    primary key (id)
);

create table location (
    id int8 generated by default as identity,
    creation_date timestamp,
    description varchar(255) not null,
    disabled boolean not null,
    account_id int8 not null,
    primary key (id)
);

create table password_recovery_token (
    id int8 generated by default as identity,
    expiry_date timestamp not null,
    token varchar(255) not null,
    user_id int8 not null,
    primary key (id)
);

create table role (
    id int8 generated by default as identity,
    name varchar(255),
    primary key (id)
);

alter table if exists account
    add constraint UK_account_email unique (email);

alter table if exists employee
    add constraint UK_employee_code unique (code);

alter table if exists account
    add constraint FK_employee_account
    foreign key (employee_id)
    references employee;

alter table if exists account_roles
    add constraint FK_role_account_role
    foreign key (role_id)
    references role;

alter table if exists account_roles
    add constraint FK_account_account_roles
    foreign key (user_id)
    references account;

alter table if exists insurance
    add constraint FK_employee_insurance
    foreign key (employee_id)
    references employee;

alter table if exists job
    add constraint FK_account_job
    foreign key (account_id)
    references account;

alter table if exists job
    add constraint FK_employee_job
    foreign key (employee_id)
    references employee;

alter table if exists job
    add constraint FK_job_type_job
    foreign key (job_type_id)
    references job_type;

alter table if exists job
    add constraint FK_location_job
    foreign key (location_id)
    references location;

alter table if exists location
    add constraint FK_account_location
    foreign key (account_id)
    references account;

alter table if exists password_recovery_token
    add constraint FK_account_password_recovery_token
    foreign key (user_id)
    references account;

ALTER TABLE IF EXISTS employee
    ADD COLUMN phone_number character varying;

ALTER TABLE IF EXISTS employee
    ADD COLUMN passport_taken boolean NOT NULL DEFAULT False;

create table payment (
    id int8 generated by default as identity,
    employee_id int8 not null,
    account_id int8 not null,
    amount numeric(19, 2) not null,
    created_date timestamp not null
);

alter table if exists payment
    add constraint FK_account_payment
    foreign key (account_id)
    references account;

ALTER TABLE IF EXISTS employee
    ADD COLUMN balance numeric(19, 2) NOT NULL DEFAULT 0;

INSERT INTO role(id, name)
	VALUES
	(1, 'ROLE_ADMIN'), (2, 'ROLE_STAFF'), (3, 'ROLE_USER'), (4, 'ROLE_TEST');

insert into account
    (id, email, enabled, first_name, last_name, password)
    values
    (1, 'janusz@admin.qp', true, 'Janusz', 'Admin', '$2a$10$U8T5nshakO1WOfWfp/QD5u1NneOXM998iqVMpPVdjzrJLFrddyolG');

INSERT INTO account_roles
	(user_id, role_id)
	VALUES
	(1, 1);